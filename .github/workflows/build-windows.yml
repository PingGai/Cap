name: Build • Cap Desktop (Windows x64)

on:
  workflow_dispatch:    # 支持手动触发
  push:                 # 推送到 main 也会触发（需要的话保留）
    branches: [ main ]

jobs:
  build-windows:
    runs-on: windows-latest
    timeout-minutes: 75

    env:
      NODE_ENV: production

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: pnpm

      # 使用 Corepack，自动按 package.json 的 packageManager 使用 pnpm@10.5.2
      - name: Enable Corepack (use pnpm from package.json)
        run: |
          corepack enable
          pnpm -v

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Set up Rust (x86_64-pc-windows-msvc)
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: x86_64-pc-windows-msvc

      - name: Cache Rust
        uses: swatinem/rust-cache@v2
        with:
          shared-key: x86_64-pc-windows-msvc

      # 与官方 CI 习惯一致，准备必要的环境变量文件
      - name: Prepare env
        shell: pwsh
        run: |
          "VITE_ENVIRONMENT=production" | Out-File -FilePath .env -Encoding utf8 -Append
          "RUST_TARGET_TRIPLE=x86_64-pc-windows-msvc" | Out-File -FilePath .env -Encoding utf8 -Append

      # 关键：禁用 Updater（否则 Tauri 会要求签名私钥，导致失败）
      - name: Disable Updater (skip signing)
        shell: pwsh
        working-directory: apps/desktop/src-tauri
        run: |
          $conf = Get-Content tauri.conf.json -Raw | ConvertFrom-Json
          if ($conf.plugins -and $conf.plugins.updater) {
            $conf.plugins.PSObject.Properties.Remove('updater')
          }
          $conf | ConvertTo-Json -Depth 100 | Set-Content tauri-nosign.conf.json

      # 构建 Tauri（Windows x64），使用无签名配置
      - name: Build desktop (Tauri)
        working-directory: apps/desktop
        run: |
          pnpm -w cap-setup
          pnpm build:tauri --target x86_64-pc-windows-msvc --config src-tauri/tauri-nosign.conf.json
        env:
          CI: false
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # 无论前面是否报错，都把产物打包上传
      - name: Upload artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: cap-windows-x64
          path: |
            apps/desktop/src-tauri/target/**/bundle/**/*.msi
            apps/desktop/src-tauri/target/**/bundle/**/*.exe
            apps/desktop/src-tauri/target/**/bundle/**/*.zip
          if-no-files-found: warn
